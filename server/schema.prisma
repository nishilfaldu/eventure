// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String  @id @default(cuid())
  firstName   String?
  lastName    String?
  email       String  @unique @default("")
  country     String  @default("")
  phoneNumber String  @default("")
  events      Event[] @relation("Event_user")
}

model Event {
  id            String         @id @default(cuid())
  name          String         @default("")
  type          String         @default("")
  location      String?
  date          DateTime
  user          User?          @relation("Event_user", fields: [userId], references: [id])
  userId        String?        @map("user")
  guests        Guest[]        @relation("Guest_event")
  decorations   Decoration?    @relation("Decoration_event")
  entertainment Entertainment? @relation("Entertainment_event")
  food          Food?          @relation("Event_food", fields: [foodId], references: [id])
  foodId        String?        @unique @map("food")
  essentials    Essential?     @relation("Essential_event")
  favors        Favor?         @relation("Event_favors", fields: [favorsId], references: [id])
  favorsId      String?        @unique @map("favors")
  cleanup       Cleanup?       @relation("Cleanup_event")

  @@index([userId])
}

model Guest {
  id          String  @id @default(cuid())
  name        String  @default("")
  email       String  @default("")
  phoneNumber String  @default("")
  event       Event?  @relation("Guest_event", fields: [eventId], references: [id])
  eventId     String? @map("event")

  @@index([eventId])
}

model Decoration {
  id                  String  @id @default(cuid())
  balloons            Boolean @default(false)
  posters             Boolean @default(false)
  tableDecorations    Boolean @default(false)
  wallDecorations     Boolean @default(false)
  lights              Boolean @default(false)
  personalizedTouches String?
  event               Event?  @relation("Decoration_event", fields: [eventId], references: [id])
  eventId             String? @unique @map("event")
}

model Entertainment {
  id           String  @id @default(cuid())
  music        Boolean @default(false)
  entertainers Boolean @default(false)
  activities   Boolean @default(false)
  photobooth   Boolean @default(false)
  prizes       Boolean @default(false)
  event        Event?  @relation("Entertainment_event", fields: [eventId], references: [id])
  eventId      String? @unique @map("event")
}

model Food {
  id         String  @id @default(cuid())
  appetizers Boolean @default(false)
  mainCourse Boolean @default(false)
  beverages  Boolean @default(false)
  dessert    Boolean @default(false)
  cake       Boolean @default(false)
  event      Event?  @relation("Event_food")
}

model Essential {
  id            String  @id @default(cuid())
  utensils      Boolean @default(false)
  cupsAndStraws Boolean @default(false)
  accessories   Boolean @default(false)
  candles       Boolean @default(false)
  cakeToppers   Boolean @default(false)
  event         Event?  @relation("Essential_event", fields: [eventId], references: [id])
  eventId       String? @unique @map("event")
}

model Favor {
  id           String  @id @default(cuid())
  goodyBags    Boolean @default(false)
  thankyouNote Boolean @default(false)
  event        Event?  @relation("Event_favors")
}

model Cleanup {
  id         String  @id @default(cuid())
  trashBags  Boolean @default(false)
  supplies   Boolean @default(false)
  recycle    Boolean @default(false)
  containers Boolean @default(false)
  event      Event?  @relation("Cleanup_event", fields: [eventId], references: [id])
  eventId    String? @unique @map("event")
}
